using System;
using System.Collections.Generic;
using System.Linq;
using System.Web;
using System.Web.UI;
using System.Web.UI.WebControls;
using System.Data;
using System.Data.SqlClient;
using System.IO;
using System.Globalization;
using System.Text;
using System.Web.UI.HtmlControls;
using System.Collections;
using System.Configuration;
using System.Drawing;
using System.Web.Security;
using System.Web.UI.WebControls.WebParts;
using System.Xml.Linq;
using System.Data.OleDb;
using System.Web.Configuration;
using System.Data;
public partial class Admin_Admin_Dashboard : System.Web.UI.Page
{
    Commonclass commnclass = new Commonclass();
    DataAccess dataaccess = new DataAccess();
    DropDownistBindClass dbc = new DropDownistBindClass();
    int userid;
    string Empname;
    int Count;
    int BRANCH_ID;
    int No_Of_Orders;
    int client_Id, Subprocess_id;
    string User_Role_Id;
    protected void Page_Load(object sender, EventArgs e)
    {
       
        if (Session["userid"] == null)
        {

            Response.Redirect("~/Login.aspx");
        }
        else
        {

            userid = int.Parse(Session["userid"].ToString());
            Empname = Session["Empname"].ToString();
            BRANCH_ID = int.Parse(Session["Branch_id"].ToString());
        }
        User_Role_Id = Session["Role_Id"].ToString();


       

        if (!IsPostBack)
        {
           // User_Wise_Restrict();
            //Get_Count_Of_Orders();
            //Get_No_Of_Orders_ToDashboard();
         
            //if (User_Role_Id == "1")
            //{
            //    Dash_Board();
            //}
            //else if (User_Role_Id == "2")
            //{

            //    EMPLOYEE_DASH_BOARD();
            //}
            if (Session["cn_id"].ToString() != "0" && Session["s_id"].ToString() != "0")
            {
                int cn_id = int.Parse(Session["cn_id"].ToString());
                int s_id = int.Parse(Session["s_id"].ToString());

                User_Wise_Restrict();
                Get_Count_Of_Orders();
                Get_No_Of_Orders_ToDashboard();
                if (User_Role_Id == "1")
                {
                    Dash_Board();
                }
                else if (User_Role_Id == "2")
                {

                    EMPLOYEE_DASH_BOARD();
                }

            }




            else if (Session["client_Id"].ToString() != "" && Session["subProcess_id"].ToString() != "" && Session["cn_id"].ToString() == "0" && Session["s_id"].ToString() == "0")
            {

                
                User_Wise_Restrict();
                Get_Count_Of_Orders();
                Get_No_Of_Orders_ToDashboard();
                if (User_Role_Id == "1")
                {
                    Dash_Board();
                }
                else if (User_Role_Id == "2")
                {

                    EMPLOYEE_DASH_BOARD();
                }


            }
        }

    }
    protected void Get_Count_Of_Orders()
    {
        Hashtable htselect = new Hashtable();
        DataTable dtselect = new System.Data.DataTable();
        if (Session["s_id"].ToString() != "0")
        {
            Subprocess_id = int.Parse(Session["s_id"].ToString());

        }
        else if (Session["subProcess_id"].ToString() != "")
        {

            Subprocess_id = int.Parse(Session["subProcess_id"].ToString());
        }
        else
        {

            Subprocess_id = 0;
        }


        //Web Allolcate
        htselect.Add("@Trans", "TOT_WEB_CALL_ORDERS");
      
        dtselect = dataaccess.ExecuteSP("Sp_Order_Count", htselect);
        if (dtselect.Rows.Count > 0)
        {
            div_web.Visible = true;
            lb_count.Text = dtselect.Rows[0]["count"].ToString();

        }
        else
        {

            //div_web.Visible = false;
        }

        //Web Process
        Hashtable htwebreaserch = new Hashtable();
        DataTable dtwebresearch = new System.Data.DataTable();
        htwebreaserch.Add("@Trans", "TOT_USER_WEB_FOR_WORK");
        htwebreaserch.Add("@User_Id",userid);

        dtwebresearch = dataaccess.ExecuteSP("Sp_Order_Count", htwebreaserch);
        if (dtwebresearch.Rows.Count > 0)
        {
            div_Web_Work.Visible = true;
            lbl_web_cal_reaserch_count.Text = dtwebresearch.Rows[0]["count"].ToString();

        }
        else
        {

            div_Web_Work.Visible = false;
        }

        //Mail Allocate
        Hashtable htmail = new Hashtable();
        DataTable dtmail = new System.Data.DataTable();
        htmail.Add("@Trans", "TOT_FAX_MAIL_ORDERS");
   
        dtmail = dataaccess.ExecuteSP("Sp_Order_Count", htmail);

        if (dtmail.Rows.Count > 0)
        {
            div_mail.Visible = true;
            lbl_count_mail_fax_Allocation.Text = dtmail.Rows[0]["count"].ToString();

        }
        else
        {

            div_mail.Visible = false;
        }

        //Mail Process
        Hashtable htmail_Reasrch = new Hashtable();
        DataTable dtmail_Research = new System.Data.DataTable();
        htmail_Reasrch.Add("@Trans", "TOT_USER_MAIL_FOR_WORK");
        htmail_Reasrch.Add("@User_Id", userid);

        dtmail_Research = dataaccess.ExecuteSP("Sp_Order_Count", htmail_Reasrch);
        if (dtmail_Research.Rows.Count > 0)
        {
            div_mail_work.Visible = true;
            lbl_count_mail_Fax_Que_count.Text = dtmail_Research.Rows[0]["count"].ToString();

        }
        else
        {

            div_mail_work.Visible = false;
        }

        //Qc Allocate
        Hashtable htqcAllocated = new Hashtable();
        DataTable dtqcAllocated = new System.Data.DataTable();
        htqcAllocated.Add("@Trans", "TOT_No_OF_WEB_CAL_MAIL_FAX_QC_ORDERS");

        dtqcAllocated = dataaccess.ExecuteSP("Sp_Order_Count", htqcAllocated);
        if (dtqcAllocated.Rows.Count > 0)
        {
            div_Qc_Allocated_Count.Visible = true;
            lbl_Qc_Allocated_Count.Text = dtqcAllocated.Rows[0]["count"].ToString();

        }
        else
        {

            div_Qc_Allocated_Count.Visible = false;
        }


        //Qc Process Order
        Hashtable htqcWork = new Hashtable();
        DataTable dtqcwork = new System.Data.DataTable();
        htqcWork.Add("@Trans", "TOT_USER_QC_FOR_WORK");
        htqcWork.Add("@User_Id", userid);


        dtqcwork = dataaccess.ExecuteSP("Sp_Order_Count", htqcWork);
        if (dtqcwork.Rows.Count > 0)
        {
            div_Count_Qc_Que.Visible = true;
            lbl_Count_Qc_Que.Text = dtqcwork.Rows[0]["count"].ToString();

        }
        else
        {

            div_Count_Qc_Que.Visible = false;
        }


        Hashtable htexport = new Hashtable();
        DataTable dtexport = new System.Data.DataTable();
        htexport.Add("@Trans", "TOT_NO_ORDERS_EXPORT");

        dtexport = dataaccess.ExecuteSP("Sp_Order_Count", htexport);
        if (dtexport.Rows.Count > 0)
        {
            div_Order_Export_Count.Visible = true;
            lbl_Order_Export_Count.Text = dtexport.Rows[0]["count"].ToString();

        }
        else
        {

            div_Order_Export_Count.Visible = false;
        }

    }


    protected void Get_No_Of_Orders_ToDashboard()
    {
        Hashtable htUpNo_oforders = new Hashtable();
        DataTable dtUpNo_oforders = new System.Data.DataTable();
        htUpNo_oforders.Add("@Trans", "UPDATE_NO_OF_ORDERS");
        dtUpNo_oforders = dataaccess.ExecuteSP("Sp_Orders_Dashboard", htUpNo_oforders);

        if (Session["s_id"].ToString() != "0")
        {
            Subprocess_id = int.Parse(Session["s_id"].ToString());

        }
        else if (Session["subProcess_id"].ToString() != "")
        {

            Subprocess_id = int.Parse(Session["subProcess_id"].ToString());
        }
        else
        {

            Subprocess_id = 0;
        }
        if (Subprocess_id != 0)
        {
            Hashtable htselect = new Hashtable();
            DataTable dtselect = new System.Data.DataTable();
            htselect.Add("@Trans", "DASHBOARD");
            htselect.Add("@User_Id", userid);
            htselect.Add("@Sub_ProcessId", Subprocess_id);
            dtselect = dataaccess.ExecuteSP("Sp_Orders_Dashboard", htselect);
            if (dtselect.Rows.Count > 0)
            {



                if (dtselect.Rows[0]["WEB_ALLOCATED"] != "")
                {
                    No_Of_Orders = int.Parse(dtselect.Rows[0]["WEB_ALLOCATED"].ToString());
                    Hashtable htupdate = new Hashtable();
                    DataTable dtupdate = new System.Data.DataTable();
                    htupdate.Add("@Trans", "UPDATE");
                    htupdate.Add("@No_Of_Orders", No_Of_Orders);
                    htupdate.Add("@Order_Type", "WEB_ALLOCATED");
                    dtupdate = dataaccess.ExecuteSP("Sp_Orders_Dashboard", htupdate);
                }
                if (dtselect.Rows[0]["MAIL_ALLOCATED"] != "")
                {
                    No_Of_Orders = int.Parse(dtselect.Rows[0]["MAIL_ALLOCATED"].ToString());
                    Hashtable htupdate = new Hashtable();
                    DataTable dtupdate = new System.Data.DataTable();
                    htupdate.Add("@Trans", "UPDATE");
                    htupdate.Add("@No_Of_Orders", No_Of_Orders);
                    htupdate.Add("@Order_Type", "MAIL_ALLOCATED");
                    dtupdate = dataaccess.ExecuteSP("Sp_Orders_Dashboard", htupdate);
                }

                if (dtselect.Rows[0]["QC_ORDERS_FOR_USER"] != "")
                {
                    No_Of_Orders = int.Parse(dtselect.Rows[0]["QC_ORDERS_FOR_USER"].ToString());
                    Hashtable htupdate = new Hashtable();
                    DataTable dtupdate = new System.Data.DataTable();
                    htupdate.Add("@Trans", "UPDATE");
                    htupdate.Add("@No_Of_Orders", No_Of_Orders);
                    htupdate.Add("@Order_Type", "QC_ORDERS_FOR_USER");
                    dtupdate = dataaccess.ExecuteSP("Sp_Orders_Dashboard", htupdate);
                }
                if (dtselect.Rows[0]["WEB_ORDERS"] != "")
                {
                    No_Of_Orders = int.Parse(dtselect.Rows[0]["WEB_ORDERS"].ToString());
                    Hashtable htupdate = new Hashtable();
                    DataTable dtupdate = new System.Data.DataTable();
                    htupdate.Add("@Trans", "UPDATE");
                    htupdate.Add("@No_Of_Orders", No_Of_Orders);
                    htupdate.Add("@Order_Type", "WEB_ORDERS");
                    dtupdate = dataaccess.ExecuteSP("Sp_Orders_Dashboard", htupdate);
                }
                if (dtselect.Rows[0]["MAIL_ORDERS"] != "")
                {
                    No_Of_Orders = int.Parse(dtselect.Rows[0]["MAIL_ORDERS"].ToString());
                    Hashtable htupdate = new Hashtable();
                    DataTable dtupdate = new System.Data.DataTable();
                    htupdate.Add("@Trans", "UPDATE");
                    htupdate.Add("@No_Of_Orders", No_Of_Orders);
                    htupdate.Add("@Order_Type", "MAIL_ORDERS");
                    dtupdate = dataaccess.ExecuteSP("Sp_Orders_Dashboard", htupdate);
                }
                if (dtselect.Rows[0]["QC_ORDERS"] != "")
                {
                    No_Of_Orders = int.Parse(dtselect.Rows[0]["QC_ORDERS"].ToString());
                    Hashtable htupdate = new Hashtable();
                    DataTable dtupdate = new System.Data.DataTable();
                    htupdate.Add("@Trans", "UPDATE");
                    htupdate.Add("@No_Of_Orders", No_Of_Orders);
                    htupdate.Add("@Order_Type", "QC_ORDERS");
                    dtupdate = dataaccess.ExecuteSP("Sp_Orders_Dashboard", htupdate);
                }

                if (dtselect.Rows[0]["ORDER_EXPORT"] != "")
                {
                    No_Of_Orders = int.Parse(dtselect.Rows[0]["ORDER_EXPORT"].ToString());
                    Hashtable htupdate = new Hashtable();
                    DataTable dtupdate = new System.Data.DataTable();
                    htupdate.Add("@Trans", "UPDATE");
                    htupdate.Add("@No_Of_Orders", No_Of_Orders);
                    htupdate.Add("@Order_Type", "ORDER_EXPORT");
                    dtupdate = dataaccess.ExecuteSP("Sp_Orders_Dashboard", htupdate);
                }

            }

        }

    }

    protected void Dash_Board()
    {
       
        Hashtable htselect = new Hashtable();
        DataTable dtselect = new System.Data.DataTable();
        htselect.Add("@Trans", "BIND");
        dtselect = dataaccess.ExecuteSP("Sp_Orders_Dashboard", htselect);
        if (dtselect.Rows.Count > 0)
        {


            Chart1.DataSource = dtselect;
            Chart1.Series["Series1"].XValueMember = "No_Of_Orders";
            Chart1.Series["Series1"].YValueMembers = "No_Of_Orders";
            Chart1.DataBind();
            lbl_Chart_Web_Allocation.Text = dtselect.Rows[0]["No_Of_Orders"].ToString();
            lbl_Chart_Mail_Allocation.Text = dtselect.Rows[1]["No_Of_Orders"].ToString();
            lbl_Chart_Qc_Allocation.Text = dtselect.Rows[2]["No_Of_Orders"].ToString();
            lbl_Chart_Web_Pending.Text = dtselect.Rows[3]["No_Of_Orders"].ToString();
            lbl_Chart_Mail_Pending.Text = dtselect.Rows[4]["No_Of_Orders"].ToString();
            lbl_Chart_Qc_Pending.Text = dtselect.Rows[5]["No_Of_Orders"].ToString();
            lbl_Chart_Export_Pending.Text = dtselect.Rows[6]["No_Of_Orders"].ToString();
        }
        else
        {

            Chart1.DataSource = null;
            Chart1.DataBind();
        }

     
    }

    protected void EMPLOYEE_DASH_BOARD()
    {

        Hashtable htselect = new Hashtable();
        DataTable dtselect = new System.Data.DataTable();
        htselect.Add("@Trans", "BIND_EMPLOYEE_WISE");
        dtselect = dataaccess.ExecuteSP("Sp_Orders_Dashboard", htselect);
        if (dtselect.Rows.Count > 0)
        {


            Chart1.DataSource = dtselect;
            Chart1.Series["Series1"].XValueMember = "No_Of_Orders";
            Chart1.Series["Series1"].YValueMembers = "No_Of_Orders";
            Chart1.DataBind();
           
            lbl_Chart_Web_Pending.Text = dtselect.Rows[0]["No_Of_Orders"].ToString();
            lbl_Chart_Mail_Pending.Text = dtselect.Rows[1]["No_Of_Orders"].ToString();
            lbl_Chart_Qc_Pending.Text = dtselect.Rows[2]["No_Of_Orders"].ToString();
           
        }
        else
        {

            Chart1.DataSource = null;
            Chart1.DataBind();
        }
    }
    protected void link_web_call_allocation_Click(object sender, EventArgs e)
    {
        Session["OrderType"] = "WEB_ALLOCATED";
        Response.Redirect("~/Admin/Orders_View.aspx");
    }

    protected void link_Mail_Fax_allocation_Click(object sender, EventArgs e)
    {
        Session["OrderType"] = "MAIL_ALLOCATED";
        Response.Redirect("~/Admin/Orders_View.aspx");
    }
    protected void link_Qc_allocation_Click(object sender, EventArgs e)
    {
        Session["OrderType"] = "QC_ORDERS_FOR_USER";
        Response.Redirect("~/Admin/Orders_View.aspx");

    }
    protected void link_Web_Orders_Waiting_Click(object sender, EventArgs e)
    {
        Session["OrderType"] = "WEB_ORDERS";
        Response.Redirect("~/Admin/Orders_View.aspx");
    }
    protected void link_Mail_Orders_Waiting_Click(object sender, EventArgs e)
    {
        Session["OrderType"] = "MAIL_ORDERS";
        Response.Redirect("~/Admin/Orders_View.aspx");

    }
    protected void link_Qc_Orders_Waiting_Click(object sender, EventArgs e)
    {
        Session["OrderType"] = "QC_ORDERS";
        Response.Redirect("~/Admin/Orders_View.aspx");
    }
    protected void link_Qc_Orders_Waiting0_Click(object sender, EventArgs e)
    {
        Session["OrderType"] = "ORDER_EXPORT";
        Response.Redirect("~/Admin/Orders_View.aspx");
    }
    
 

    protected void User_Wise_Restrict()
    {

        if (User_Role_Id == "2")
        {

            div_web.Visible = false;
            div_mail.Visible = false;
            div_Qc_Allocated_Count.Visible = false;
            div_Order_Export_Count.Visible = false;

            lnk_webcall_allocation.Enabled = false;
            LinkMailFaxAllocate.Enabled = false;
            LinkQualityAllocate.Enabled = false;
            LinkImport.Enabled = false;
            LinkExport.Enabled = false;
            lb_count.Visible = false;
            lbl_Qc_Allocated_Count.Visible = false;
            lbl_count_mail_fax_Allocation.Visible = false;
            lbl_Order_Export_Count.Visible = false;
            lbl_Chart_Web_Allocation.Visible = false;
            lbl_Chart_Mail_Allocation.Visible = false;
            lbl_Chart_Qc_Allocation.Visible = false;
            lbl_Chart_Export_Pending.Visible = false;
            divwebalocate.Attributes.Add("class", "imgWebCallAllocate_Disable");
            divMailalocate.Attributes.Add("class", "imgMailFaxAllocate_Disable");
            divQCalocate.Attributes.Add("class", "imgQualityAllocateDisable");
            Dimport.Attributes.Add("class", "imgImport_Disable");
            DiExport.Attributes.Add("class", "imgExport_Disable");
           // trAllocation.Visible = false;
        }
        else if (User_Role_Id == "1")
        {

            div_web.Visible = true;
            div_mail.Visible = true;
            div_Qc_Allocated_Count.Visible = true;
            div_Order_Export_Count.Visible = true;

            lnk_webcall_allocation.Enabled = true;
            LinkMailFaxAllocate.Enabled = true;
            LinkQualityAllocate.Enabled = true;
            LinkImport.Enabled = true;
            LinkExport.Enabled = true;
            lb_count.Visible = true;
            lbl_Qc_Allocated_Count.Visible = true;
            lbl_count_mail_fax_Allocation.Visible = true;
            lbl_Order_Export_Count.Visible = true;
            lbl_Chart_Web_Allocation.Visible = true;
            lbl_Chart_Mail_Allocation.Visible = true;
            lbl_Chart_Qc_Allocation.Visible = true;
            lbl_Chart_Export_Pending.Visible = true;
            divwebalocate.Attributes.Add("class", "imgWebCallAllocate");
            divMailalocate.Attributes.Add("class", "imgMailFaxAllocate");
            divQCalocate.Attributes.Add("class", "imgQualityAllocate");
            Dimport.Attributes.Add("class", "imgImport");
            DiExport.Attributes.Add("class", "imgExport");
           // trAllocation.Visible = true;
          
        }

    }
    protected void lnk_webcall_allocation_Click(object sender, EventArgs e)
    {

        if (User_Role_Id == "1")
        {
            Session["Ordertype"] = "Web/Call";
            Response.Redirect("~/Admin/Web_Call_Order_Allocate.aspx");
           
        }
     

    }

    protected void LinkImport_Click(object sender, EventArgs e)
    {
        Session["client_Id"] = Session["client_Id"].ToString();
        Session["subProcess_id"] = Session["subProcess_id"].ToString();
        Response.Redirect("~/Admin/Orders_Import.aspx");
    }
    protected void LinkExport_Click(object sender, EventArgs e)
    {
        Session["client_Id"] = Session["client_Id"].ToString();
        Session["subProcess_id"] = Session["subProcess_id"].ToString();
        Response.Redirect("~/Admin/Order_Export.aspx");
    }
    protected void LinkMailFaxAllocate_Click(object sender, EventArgs e)
    {
        if (User_Role_Id == "1")
        {
            Session["Ordertype"] = "Mail/Fax";
            Response.Redirect("~/Admin/Web_Call_Order_Allocate.aspx");
        }
    }
    protected void LinkQualityAllocate_Click(object sender, EventArgs e)
    {
        if (User_Role_Id == "1")
        {
            Session["OrderType"] = "QC";//Hear it will take all the Four Type of Orders
            Response.Redirect("~/Admin/Web_Call_Order_Allocate.aspx");
        }
    }
    protected void LinkProduction_Click(object sender, EventArgs e)
    {
        Session["client_Id"] = Session["client_Id"].ToString();
        Session["subProcess_id"] = Session["subProcess_id"].ToString();
        DataTable dt = new DataTable();
        Hashtable ht = new Hashtable();
        ht.Add("@Client_Id", int.Parse(Session["client_Id"].ToString()));
        ht.Add("@Sub_ProcessId", int.Parse(Session["subProcess_id"].ToString()));
        dt = dataaccess.ExecuteSP("Sp_Rpt_ClientName_Invoice", ht);
        if (dt.Rows.Count > 0)
        {
            Response.Redirect("~/Reports/Rpt_ClientName_Production.aspx");

        }
        else
        {
            ScriptManager.RegisterStartupScript(Page, Page.GetType(), "Msg", "<script> alert('No Records')</script>", false);
        }

    }
    protected void LinkReport_Click(object sender, EventArgs e)
    {
        Session["client_Id"] = Session["client_Id"].ToString();
        Session["subProcess_id"] = Session["subProcess_id"].ToString();
        DataTable dt = new DataTable();
        Hashtable ht = new Hashtable();
        ht.Add("@Client_Id", int.Parse(Session["client_Id"].ToString()));
        ht.Add("@Sub_ProcessId", int.Parse(Session["subProcess_id"].ToString()));
        dt = dataaccess.ExecuteSP("Sp_Rpt_ClientName_Invoice", ht);
        if (dt.Rows.Count > 0)
        {
            Response.Redirect("~/Reports/Rpt_ClientName_Invoice.aspx");

        }
        else
        {
            ScriptManager.RegisterStartupScript(Page, Page.GetType(), "Msg", "<script> alert('No Records')</script>", false);
        }


    }
    protected void LinkPending_Click(object sender, EventArgs e)
    {
        DataTable dt = new DataTable();
        Hashtable ht = new Hashtable();
        Session["client_Id"] = Session["client_Id"].ToString();
        Session["subProcess_id"] = Session["subProcess_id"].ToString();
        ht.Add("@Client_Id", int.Parse(Session["client_Id"].ToString()));
        ht.Add("@Sub_ProcessId", int.Parse(Session["subProcess_id"].ToString()));
        dt = dataaccess.ExecuteSP("Sp_Rpt_ClientName_Pending", ht);
        if (dt.Rows.Count > 0)
        {

            Response.Redirect("~/Reports/Rpt_ClientName_Pending.aspx");
        }

        else
        {
            ScriptManager.RegisterStartupScript(Page, Page.GetType(), "Msg", "<script> alert('No Records')</script>", false);
        }


    }
    protected void News_Click(object sender, ImageClickEventArgs e)
    {
        Response.Redirect("~/Admin/Admin_Dashboard.aspx");
    }
    protected void ImageButton1_Click(object sender, ImageClickEventArgs e)
    {
        Update_LastLogin();
    }
    protected void Update_LastLogin()
    {

        Hashtable htuser = new Hashtable();
        DataTable dtuser = new DataTable();

        htuser.Add("@Trans", "UPDATE_LAST_LOGIN");
        htuser.Add("@Last_login", DateTime.Now);
        htuser.Add("@User_id", userid);
        dtuser = dataaccess.ExecuteSP("Sp_User", htuser);

        Response.Redirect("~/Login.aspx");

    }
    protected void ImageButton3_Click(object sender, ImageClickEventArgs e)
    {
        ModalPopupImportExcel.Show();
        dbc.BindClientName(ddl_Client_Name);

    }
    protected void btn_Tax_Cancel_Click(object sender, EventArgs e)
    {
        ModalPopupImportExcel.Hide();
    }
    protected void ddl_Client_Name_SelectedIndexChanged(object sender, EventArgs e)
    {
        if (ddl_Client_Name.SelectedValue != "0")
        {

            dbc.BindSubProcessName(ddl_Client_SubProcess, int.Parse(ddl_Client_Name.SelectedValue));
        }
        else
        {
            ddl_Client_SubProcess.ClearSelection();

        }


    }
    //protected void ddl_Client_SubProcess_SelectedIndexChanged(object sender, EventArgs e)
    //{
       
    //}
    protected void btn_Submit_Click(object sender, EventArgs e)
    {
        if (ddl_Client_Name.SelectedIndex != 0 && ddl_Client_SubProcess.SelectedIndex != 0)
        {

            client_Id = int.Parse(ddl_Client_Name.SelectedValue.ToString());
            Subprocess_id = int.Parse(ddl_Client_SubProcess.SelectedValue.ToString());
            Session["Client_Id"] = client_Id.ToString();
            Session["Subprocess_Id"] = Subprocess_id.ToString();
            Session["client_Id"] = client_Id.ToString();
            Session["subProcess_id"] = Subprocess_id.ToString();
            Session["cn_id"] = "0";
            Session["s_id"] = "0";
            User_Wise_Restrict();
            Get_Count_Of_Orders();
            Get_No_Of_Orders_ToDashboard();
            if (User_Role_Id == "1")
            {
                Dash_Board();
            }
            else if (User_Role_Id == "2")
            {

                EMPLOYEE_DASH_BOARD();
            }

            ModalPopupImportExcel.Hide();
           
           // Response.Redirect("~/Admin/Admin_Dashboard.aspx");

        }
        else
        {

            ScriptManager.RegisterStartupScript(Page, Page.GetType(), "Msg", "<script> alert('Please Select Client Name to Continue')</script>", false);
        }
    }
    protected void LinkBtn_Order_search_Click(object sender, EventArgs e)
    {
        Session["client_Id"] = Session["client_Id"].ToString();
        Session["subProcess_id"] = Session["subProcess_id"].ToString();
        Response.Redirect("~/Admin/Order_Search.aspx");
    }
}